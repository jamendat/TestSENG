// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestSENG.Data;

#nullable disable

namespace TestSENG.Migrations
{
    [DbContext(typeof(BankingContext))]
    partial class BankingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("TestSENG.Models.Account", b =>
                {
                    b.Property<int>("ID_Account")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("DateIssue")
                        .HasColumnType("TEXT");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("TEXT");

                    b.Property<int>("ID_Customer")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_Account");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("TestSENG.Models.Customer", b =>
                {
                    b.Property<int>("ID_Customer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateIssue")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("IDCardNo")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("ID_Customer");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("TestSENG.Models.Deposit", b =>
                {
                    b.Property<int>("ID_Deposit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("DateIssue")
                        .HasColumnType("TEXT");

                    b.Property<int>("ID_Account")
                        .HasColumnType("INTEGER");

                    b.Property<int>("status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_Deposit");

                    b.ToTable("Deposit", (string)null);
                });

            modelBuilder.Entity("TestSENG.Models.Log_Account", b =>
                {
                    b.Property<int>("ID_Log_Account")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("DateIssue")
                        .HasColumnType("TEXT");

                    b.Property<int>("ID_Account")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ID_Account_Receive")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("TEXT");

                    b.Property<int>("status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_Log_Account");

                    b.ToTable("Log_Account", (string)null);
                });

            modelBuilder.Entity("TestSENG.Models.TransferMoney", b =>
                {
                    b.Property<int>("ID_TransferMoney")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("DateIssue")
                        .HasColumnType("TEXT");

                    b.Property<int>("ID_Account")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ID_Account_Receive")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("TEXT");

                    b.Property<int>("status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_TransferMoney");

                    b.ToTable("TransferMoney", (string)null);
                });

            modelBuilder.Entity("TestSENG.Models.Withdraw", b =>
                {
                    b.Property<int>("ID_Withdraw")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("DateIssue")
                        .HasColumnType("TEXT");

                    b.Property<int>("ID_Account")
                        .HasColumnType("INTEGER");

                    b.Property<int>("status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_Withdraw");

                    b.ToTable("Withdraw", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
